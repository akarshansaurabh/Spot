#include "otg.h"
#include <fstream>
#include <cmath>

using namespace OwlOtg;

template <int DOF>
ProfileCode Profile14<DOF>::ComputeSegmentTrajectoryTimes(Eigen::Matrix<double, DOF, 3> &current_state,
                                                          const Eigen::Matrix<double, DOF, 3> &target_state,
                                                          Eigen::Matrix<double, DOF, 3> &boundary_condition, int joint_index)
{
    // cout << "DT: 14" << endl;
    this->xi(joint_index, 0) = current_state(joint_index, 0), this->vi(joint_index, 0) = current_state(joint_index, 1), this->ai(joint_index, 0) = current_state(joint_index, 2);
    this->x_target(joint_index, 0) = target_state(joint_index, 0), this->v_target(joint_index, 0) = target_state(joint_index, 1);
    this->vm(joint_index, 0) = boundary_condition(joint_index, 0), this->am(joint_index, 0) = boundary_condition(joint_index, 1), this->jm(joint_index, 0) = boundary_condition(joint_index, 2);
    double del_a = this->am(joint_index, 0) / 100.0, del_v = this->vm(joint_index, 0) / 100.0;
    bool jerk_will_change = false;

    this->tj1(joint_index, 0) = (this->am(joint_index, 0) + this->ai(joint_index, 0)) / this->jm(joint_index, 0);
    this->tj1_(joint_index, 0) = this->am(joint_index, 0) / this->jm(joint_index, 0);

    double sq_term = this->jm(joint_index, 0) * this->v_target(joint_index, 0) + this->jm(joint_index, 0) * this->vm(joint_index, 0);

    this->ta(joint_index, 0) = -1.0 / 2 * (this->jm(joint_index, 0) * pow(this->tj1(joint_index, 0), 2) - this->jm(joint_index, 0) * pow(this->tj1_(joint_index, 0), 2) - 2 * this->ai(joint_index, 0) * this->tj1(joint_index, 0) + 2 * this->am(joint_index, 0) * this->tj1_(joint_index, 0) - 2 * this->vi(joint_index, 0) - 2 * this->vm(joint_index, 0)) / this->am(joint_index, 0);
    this->tc(joint_index, 0) = 1.0 / 24 * (3 * pow(this->jm(joint_index, 0), 3) * pow(this->tj1(joint_index, 0), 4) - 3 * pow(this->jm(joint_index, 0), 3) * pow(this->tj1_(joint_index, 0), 4) - 4 * (3 * this->ai(joint_index, 0) + this->am(joint_index, 0)) * pow(this->jm(joint_index, 0), 2) * pow(this->tj1(joint_index, 0), 3) + 4 * this->am(joint_index, 0) * pow(this->jm(joint_index, 0), 2) * pow(this->tj1_(joint_index, 0), 3) - 12 * pow(this->jm(joint_index, 0), 2) * pow(this->tj1_(joint_index, 0), 2) * this->vm(joint_index, 0) + 12 * (pow(this->ai(joint_index, 0), 2) + this->ai(joint_index, 0) * this->am(joint_index, 0)) * this->jm(joint_index, 0) * pow(this->tj1(joint_index, 0), 2) + 12 * this->jm(joint_index, 0) * pow(this->vi(joint_index, 0), 2) - 12 * this->jm(joint_index, 0) * pow(this->vm(joint_index, 0), 2) - 24 * this->am(joint_index, 0) * this->jm(joint_index, 0) * this->x_target(joint_index, 0) + 24 * this->am(joint_index, 0) * this->jm(joint_index, 0) * this->xi(joint_index, 0) - 12 * (pow(this->jm(joint_index, 0), 2) * pow(this->tj1(joint_index, 0), 2) - 2 * (this->ai(joint_index, 0) + this->am(joint_index, 0)) * this->jm(joint_index, 0) * this->tj1(joint_index, 0)) * this->vi(joint_index, 0) + 24 * (this->am(joint_index, 0) * this->v_target(joint_index, 0) - this->am(joint_index, 0) * this->vm(joint_index, 0)) * sqrt(this->jm(joint_index, 0) * this->v_target(joint_index, 0) + this->jm(joint_index, 0) * this->vm(joint_index, 0))) / (this->am(joint_index, 0) * this->jm(joint_index, 0) * this->vm(joint_index, 0));
    this->ap2(joint_index, 0) = sqrt(sq_term);
    if (this->ta(joint_index, 0) < -0.001)
        return ProfileCode::Profile16;
    else if (fabs(this->ta(joint_index, 0)) < 0.001)
        this->ta(joint_index, 0) = 0.0;
    // sthis->ta(joint_index, 0)rt if
    int index = 0;
    if (this->ap2(joint_index, 0) > this->am(joint_index, 0) || this->tc(joint_index, 0) < 0.0)
    {
        if (this->ap2(joint_index, 0) > this->am(joint_index, 0))
        {
            this->ap2(joint_index, 0) = this->am(joint_index, 0);
            jerk_will_change = true;
        }
        while (this->ap2(joint_index, 0) > a_min[joint_index] && this->vm(joint_index, 0) > v_min[joint_index] && index < 100)
        {
            index++;
            // v max recomputhis->ta(joint_index, 0)tion
            if (index == 1 && this->tc(joint_index, 0) < 0.0)
            {
                double va = 0.0, vb = this->vm(joint_index, 0);
                if (jerk_will_change)
                {
                    while (fabs(vb - va) > 0.01)
                    {
                        double val = va;
                        double func_val1 = 1.0 / 24.0 * (12 * pow(this->am(joint_index, 0), 4) * pow(this->vi(joint_index, 0), 2) + 24 * pow(this->am(joint_index, 0), 5) * this->xi(joint_index, 0) + (3 * pow(this->ai(joint_index, 0), 4) + 8 * pow(this->ai(joint_index, 0), 3) * this->am(joint_index, 0) + 6 * pow(this->ai(joint_index, 0), 2) * pow(this->am(joint_index, 0), 2) + 24 * pow(this->am(joint_index, 0), 4)) * pow(this->v_target(joint_index, 0), 2) + 12 * (pow(this->ai(joint_index, 0), 2) * pow(this->am(joint_index, 0), 2) + 2 * this->ai(joint_index, 0) * pow(this->am(joint_index, 0), 3) + pow(this->am(joint_index, 0), 4)) * this->v_target(joint_index, 0) * this->vi(joint_index, 0) + (3 * pow(this->ai(joint_index, 0), 4) + 8 * pow(this->ai(joint_index, 0), 3) * this->am(joint_index, 0) + 6 * pow(this->ai(joint_index, 0), 2) * pow(this->am(joint_index, 0), 2) - 48 * pow(this->am(joint_index, 0), 4)) * pow(val, 2) + 2 * ((3 * pow(this->ai(joint_index, 0), 4) + 8 * pow(this->ai(joint_index, 0), 3) * this->am(joint_index, 0) + 6 * pow(this->ai(joint_index, 0), 2) * pow(this->am(joint_index, 0), 2) - 6 * pow(this->am(joint_index, 0), 4)) * this->v_target(joint_index, 0) + 6 * (pow(this->ai(joint_index, 0), 2) * pow(this->am(joint_index, 0), 2) + 2 * this->ai(joint_index, 0) * pow(this->am(joint_index, 0), 3) + pow(this->am(joint_index, 0), 4)) * this->vi(joint_index, 0)) * val) / pow(this->am(joint_index, 0), 5) - this->x_target(joint_index, 0);
                        val = (va + vb) / 2.0;
                        double func_val2 = 1.0 / 24.0 * (12 * pow(this->am(joint_index, 0), 4) * pow(this->vi(joint_index, 0), 2) + 24 * pow(this->am(joint_index, 0), 5) * this->xi(joint_index, 0) + (3 * pow(this->ai(joint_index, 0), 4) + 8 * pow(this->ai(joint_index, 0), 3) * this->am(joint_index, 0) + 6 * pow(this->ai(joint_index, 0), 2) * pow(this->am(joint_index, 0), 2) + 24 * pow(this->am(joint_index, 0), 4)) * pow(this->v_target(joint_index, 0), 2) + 12 * (pow(this->ai(joint_index, 0), 2) * pow(this->am(joint_index, 0), 2) + 2 * this->ai(joint_index, 0) * pow(this->am(joint_index, 0), 3) + pow(this->am(joint_index, 0), 4)) * this->v_target(joint_index, 0) * this->vi(joint_index, 0) + (3 * pow(this->ai(joint_index, 0), 4) + 8 * pow(this->ai(joint_index, 0), 3) * this->am(joint_index, 0) + 6 * pow(this->ai(joint_index, 0), 2) * pow(this->am(joint_index, 0), 2) - 48 * pow(this->am(joint_index, 0), 4)) * pow(val, 2) + 2 * ((3 * pow(this->ai(joint_index, 0), 4) + 8 * pow(this->ai(joint_index, 0), 3) * this->am(joint_index, 0) + 6 * pow(this->ai(joint_index, 0), 2) * pow(this->am(joint_index, 0), 2) - 6 * pow(this->am(joint_index, 0), 4)) * this->v_target(joint_index, 0) + 6 * (pow(this->ai(joint_index, 0), 2) * pow(this->am(joint_index, 0), 2) + 2 * this->ai(joint_index, 0) * pow(this->am(joint_index, 0), 3) + pow(this->am(joint_index, 0), 4)) * this->vi(joint_index, 0)) * val) / pow(this->am(joint_index, 0), 5) - this->x_target(joint_index, 0);
                        if (func_val1 * func_val2 < 0.0)
                            vb = val;
                        else
                            va = val;
                    }
                    this->vm(joint_index, 0) = (va + vb) / 2.0;
                }
                else
                {
                    while (fabs(vb - va) > 0.01)
                    {
                        double val = va;
                        double func_val1 = 1.0 / 24.0 * (3 * pow(this->ai(joint_index, 0), 4) + 8 * pow(this->ai(joint_index, 0), 3) * this->am(joint_index, 0) + 6 * pow(this->ai(joint_index, 0), 2) * pow(this->am(joint_index, 0), 2) + 12 * pow(this->jm(joint_index, 0), 2) * pow(this->vi(joint_index, 0), 2) - 12 * pow(this->am(joint_index, 0), 2) * this->jm(joint_index, 0) * val - 12 * pow(this->jm(joint_index, 0), 2) * pow(val, 2) + 24 * this->am(joint_index, 0) * pow(this->jm(joint_index, 0), 2) * this->xi(joint_index, 0) + 12 * (pow(this->ai(joint_index, 0), 2) + 2 * this->ai(joint_index, 0) * this->am(joint_index, 0) + pow(this->am(joint_index, 0), 2)) * this->jm(joint_index, 0) * this->vi(joint_index, 0) + 24 * (this->am(joint_index, 0) * this->jm(joint_index, 0) * this->v_target(joint_index, 0) - this->am(joint_index, 0) * this->jm(joint_index, 0) * val) * sqrt(this->jm(joint_index, 0) * this->v_target(joint_index, 0) + this->jm(joint_index, 0) * val)) / (this->am(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) - this->x_target(joint_index, 0);
                        val = (va + vb) / 2.0;
                        double func_val2 = 1.0 / 24.0 * (3 * pow(this->ai(joint_index, 0), 4) + 8 * pow(this->ai(joint_index, 0), 3) * this->am(joint_index, 0) + 6 * pow(this->ai(joint_index, 0), 2) * pow(this->am(joint_index, 0), 2) + 12 * pow(this->jm(joint_index, 0), 2) * pow(this->vi(joint_index, 0), 2) - 12 * pow(this->am(joint_index, 0), 2) * this->jm(joint_index, 0) * val - 12 * pow(this->jm(joint_index, 0), 2) * pow(val, 2) + 24 * this->am(joint_index, 0) * pow(this->jm(joint_index, 0), 2) * this->xi(joint_index, 0) + 12 * (pow(this->ai(joint_index, 0), 2) + 2 * this->ai(joint_index, 0) * this->am(joint_index, 0) + pow(this->am(joint_index, 0), 2)) * this->jm(joint_index, 0) * this->vi(joint_index, 0) + 24 * (this->am(joint_index, 0) * this->jm(joint_index, 0) * this->v_target(joint_index, 0) - this->am(joint_index, 0) * this->jm(joint_index, 0) * val) * sqrt(this->jm(joint_index, 0) * this->v_target(joint_index, 0) + this->jm(joint_index, 0) * val)) / (this->am(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) - this->x_target(joint_index, 0);
                        if (func_val1 * func_val2 < 0.0)
                            vb = val;
                        else
                            va = val;
                    }
                    this->vm(joint_index, 0) = (va + vb) / 2.0;
                }
                boundary_condition(joint_index, 0) = this->vm(joint_index, 0);
                if (this->vi(joint_index, 0) > this->vm(joint_index, 0))
                    return ProfileCode::PositiveVariantB;
                else if (this->vi(joint_index, 0) < -this->vm(joint_index, 0))
                    return ProfileCode::NegativeVariantB;
            }
            // jerk recomputhis->ta(joint_index, 0)tion
            if (jerk_will_change)
            {
                this->jm(joint_index, 0) = pow(this->am(joint_index, 0), 2) / (this->v_target(joint_index, 0) + this->vm(joint_index, 0));
                boundary_condition(joint_index, 2) = this->jm(joint_index, 0);
            }
            this->ta(joint_index, 0) = -1.0 / 2 * (this->jm(joint_index, 0) * pow(this->tj1(joint_index, 0), 2) - this->jm(joint_index, 0) * pow(this->tj1_(joint_index, 0), 2) - 2 * this->ai(joint_index, 0) * this->tj1(joint_index, 0) + 2 * this->am(joint_index, 0) * this->tj1_(joint_index, 0) - 2 * this->vi(joint_index, 0) - 2 * this->vm(joint_index, 0)) / this->am(joint_index, 0);
            this->tc(joint_index, 0) = 1.0 / 24 * (3 * pow(this->jm(joint_index, 0), 3) * pow(this->tj1(joint_index, 0), 4) - 3 * pow(this->jm(joint_index, 0), 3) * pow(this->tj1_(joint_index, 0), 4) - 4 * (3 * this->ai(joint_index, 0) + this->am(joint_index, 0)) * pow(this->jm(joint_index, 0), 2) * pow(this->tj1(joint_index, 0), 3) + 4 * this->am(joint_index, 0) * pow(this->jm(joint_index, 0), 2) * pow(this->tj1_(joint_index, 0), 3) - 12 * pow(this->jm(joint_index, 0), 2) * pow(this->tj1_(joint_index, 0), 2) * this->vm(joint_index, 0) + 12 * (pow(this->ai(joint_index, 0), 2) + this->ai(joint_index, 0) * this->am(joint_index, 0)) * this->jm(joint_index, 0) * pow(this->tj1(joint_index, 0), 2) + 12 * this->jm(joint_index, 0) * pow(this->vi(joint_index, 0), 2) - 12 * this->jm(joint_index, 0) * pow(this->vm(joint_index, 0), 2) - 24 * this->am(joint_index, 0) * this->jm(joint_index, 0) * this->x_target(joint_index, 0) + 24 * this->am(joint_index, 0) * this->jm(joint_index, 0) * this->xi(joint_index, 0) - 12 * (pow(this->jm(joint_index, 0), 2) * pow(this->tj1(joint_index, 0), 2) - 2 * (this->ai(joint_index, 0) + this->am(joint_index, 0)) * this->jm(joint_index, 0) * this->tj1(joint_index, 0)) * this->vi(joint_index, 0) + 24 * (this->am(joint_index, 0) * this->v_target(joint_index, 0) - this->am(joint_index, 0) * this->vm(joint_index, 0)) * sqrt(this->jm(joint_index, 0) * this->v_target(joint_index, 0) + this->jm(joint_index, 0) * this->vm(joint_index, 0))) / (this->am(joint_index, 0) * this->jm(joint_index, 0) * this->vm(joint_index, 0));
            sq_term = this->jm(joint_index, 0) * this->v_target(joint_index, 0) + this->jm(joint_index, 0) * this->vm(joint_index, 0);
            this->ap2(joint_index, 0) = sqrt(sq_term);
            this->tj1(joint_index, 0) = (this->am(joint_index, 0) - this->ai(joint_index, 0)) / this->jm(joint_index, 0);
            this->tj1_(joint_index, 0) = this->am(joint_index, 0) / this->jm(joint_index, 0);
            this->tj2(joint_index, 0) = this->ap2(joint_index, 0) / this->jm(joint_index, 0);
            this->tj2_(joint_index, 0) = this->tj2(joint_index, 0);

            if (this->tc(joint_index, 0) >= -0.001 && this->ta(joint_index, 0) >= -0.001 && this->ap2(joint_index, 0) <= this->am(joint_index, 0))
            {
                if (fabs(this->tc(joint_index, 0)) < 0.001)
                    this->tc(joint_index, 0) = 0.0;
                if (fabs(this->ta(joint_index, 0)) < 0.001)
                    this->ta(joint_index, 0) = 0.0;
                break;
            }
            if (this->tc(joint_index, 0) >= -0.001 && this->ta(joint_index, 0) >= -0.001 && this->ap2(joint_index, 0) > this->am(joint_index, 0))
                this->ap2(joint_index, 0) -= del_a;
            else if (this->tc(joint_index, 0) < 0.0)
            {
                this->vm(joint_index, 0) -= del_v;
                boundary_condition(joint_index, 0) = this->vm(joint_index, 0);
            }
            if (this->ta(joint_index, 0) < -0.001)
                return ProfileCode::Profile16;
            if (this->vi(joint_index, 0) > this->vm(joint_index, 0))
                return ProfileCode::PositiveVariantB;
            else if (this->vi(joint_index, 0) < -this->vm(joint_index, 0))
                return ProfileCode::NegativeVariantB;
            if (this->vm(joint_index, 0) < v_min[joint_index] || this->am(joint_index, 0) < a_min[joint_index] || boundary_condition(joint_index, 2) > this->jm(joint_index, 0) || this->ap2(joint_index, 0) <= a_min[joint_index])
            {
                no_sol[joint_index]++;
                cout << "profile 14 boundary limits issue" << endl;
                return ProfileCode::ErrorProfile;
            }
        }
    }
    this->T(joint_index, 0) = this->tj1(joint_index, 0) + this->ta(joint_index, 0) + this->tj1_(joint_index, 0) + this->tc(joint_index, 0) + this->tj2(joint_index, 0) + this->tj2_(joint_index, 0);
    this->vm(joint_index, 0) = boundary_condition(joint_index, 0), this->am(joint_index, 0) = boundary_condition(joint_index, 1), this->jm(joint_index, 0) = boundary_condition(joint_index, 2);

    double xt = -1.0 / 6 * (pow(this->jm(joint_index, 0), 3) * pow(this->T(joint_index, 0), 3) - pow(this->jm(joint_index, 0), 3) * pow(this->ta(joint_index, 0), 3) - pow(this->jm(joint_index, 0), 3) * pow(this->tc(joint_index, 0), 3) - 3 * pow(this->jm(joint_index, 0), 3) * pow(this->tj1(joint_index, 0), 3) + pow(this->jm(joint_index, 0), 3) * pow(this->tj1_(joint_index, 0), 3) - 6 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2) * pow(this->T(joint_index, 0), 2) + 6 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0) * this->T(joint_index, 0) - 6 * pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) * this->vi(joint_index, 0) - 2 * pow(this->ap2(joint_index, 0), 3) + 3 * (pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * pow(this->ta(joint_index, 0), 2) + 3 * (pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - 2 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) * pow(this->tc(joint_index, 0), 2) + 3 * (2 * pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->tc(joint_index, 0) + (this->ai(joint_index, 0) - 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * pow(this->tj1(joint_index, 0), 2) - 3 * (pow(this->jm(joint_index, 0), 3) * this->tc(joint_index, 0) + (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * pow(this->tj1_(joint_index, 0), 2) - 6 * pow(this->jm(joint_index, 0), 2) * this->xi(joint_index, 0) - 3 * (pow(this->jm(joint_index, 0), 3) * pow(this->T(joint_index, 0), 2) - 2 * (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) + 2 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0)) * this->ta(joint_index, 0) - 3 * (pow(this->jm(joint_index, 0), 3) * pow(this->T(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->ta(joint_index, 0), 2) - 4 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) + 2 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - 2 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) * this->ta(joint_index, 0)) * this->tc(joint_index, 0) - 3 * (pow(this->jm(joint_index, 0), 3) * pow(this->T(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->ta(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->tc(joint_index, 0), 2) + 2 * (this->ai(joint_index, 0) - 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) + 2 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * this->ta(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - 2 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) * this->tc(joint_index, 0)) * this->tj1(joint_index, 0) - 3 * (pow(this->jm(joint_index, 0), 3) * pow(this->T(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->ta(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->tc(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->tj1(joint_index, 0), 2) - 2 * (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) + 2 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * this->ta(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - 2 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) * this->tc(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->tc(joint_index, 0) - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * this->tj1(joint_index, 0)) * this->tj1_(joint_index, 0)) / pow(this->jm(joint_index, 0), 2);
    double vt = -1.0 / 2 * (pow(this->jm(joint_index, 0), 2) * pow(this->T(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 2) * pow(this->ta(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 2) * pow(this->tc(joint_index, 0), 2) + 2 * pow(this->jm(joint_index, 0), 2) * pow(this->tj1(joint_index, 0), 2) - 4 * this->ap2(joint_index, 0) * this->jm(joint_index, 0) * this->T(joint_index, 0) + 2 * pow(this->ap2(joint_index, 0), 2) - 2 * (pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * this->jm(joint_index, 0)) * this->ta(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) - pow(this->jm(joint_index, 0), 2) * this->ta(joint_index, 0) - 2 * this->ap2(joint_index, 0) * this->jm(joint_index, 0)) * this->tc(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) - pow(this->jm(joint_index, 0), 2) * this->ta(joint_index, 0) - pow(this->jm(joint_index, 0), 2) * this->tc(joint_index, 0) + (this->ai(joint_index, 0) - 2 * this->ap2(joint_index, 0)) * this->jm(joint_index, 0)) * this->tj1(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) - pow(this->jm(joint_index, 0), 2) * this->ta(joint_index, 0) - pow(this->jm(joint_index, 0), 2) * this->tc(joint_index, 0) - pow(this->jm(joint_index, 0), 2) * this->tj1(joint_index, 0) - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * this->jm(joint_index, 0)) * this->tj1_(joint_index, 0) - 2 * this->jm(joint_index, 0) * this->vi(joint_index, 0)) / this->jm(joint_index, 0);
    double at = this->jm(joint_index, 0) * (this->tj1(joint_index, 0) + this->ta(joint_index, 0) + this->tj1_(joint_index, 0) + this->tc(joint_index, 0) + (this->ap2(joint_index, 0) / this->jm(joint_index, 0)) + (this->ap2(joint_index, 0) / this->jm(joint_index, 0)) - this->T(joint_index, 0));

    this->TargetStateAchieved(target_state, xt, vt, at, joint_index);
    profile_sequence[joint_index].push_back(ValidProfileCode::Profile14);
    zero_time[joint_index].push_back(zero_time[joint_index][zero_time[joint_index].size() - 1] + this->T(joint_index, 0));
    return ProfileCode::ValidProfile;
}

template <int DOF>
void Profile14<DOF>::HelpingFun2Gen_State(double &xt, double &vt, double &at, double t, int joint_index)
{
    state_is_generated[joint_index] = true;
    if (t <= this->tj1(joint_index, 0))
    { // 0
        xt = -1.0 / 6 * this->jm(joint_index, 0) * pow(t, 3) + 1.0 / 2 * this->ai(joint_index, 0) * pow(t, 2) + t * this->vi(joint_index, 0) + this->xi(joint_index, 0);
        vt = -1.0 / 2 * this->jm(joint_index, 0) * pow(t, 2) + this->ai(joint_index, 0) * t + this->vi(joint_index, 0);
        at = (-this->jm(joint_index, 0) * t) + this->ai(joint_index, 0);
        if (at > this->am(joint_index, 0))
            at = this->am(joint_index, 0);
        else if (at < -this->am(joint_index, 0))
            at = -this->am(joint_index, 0);
    }
    else if (t <= this->tj1(joint_index, 0) + this->ta(joint_index, 0))
    { // 1
        xt = 1.0 / 3 * this->jm(joint_index, 0) * pow(this->tj1(joint_index, 0), 3) - 1.0 / 2 * this->am(joint_index, 0) * pow(t, 2) + (this->ai(joint_index, 0) + this->am(joint_index, 0)) * t * this->tj1(joint_index, 0) - 1.0 / 2 * (this->jm(joint_index, 0) * t + this->ai(joint_index, 0) + this->am(joint_index, 0)) * pow(this->tj1(joint_index, 0), 2) + t * this->vi(joint_index, 0) + this->xi(joint_index, 0);
        vt = -1.0 / 2 * this->jm(joint_index, 0) * pow(this->tj1(joint_index, 0), 2) - this->am(joint_index, 0) * t + (this->ai(joint_index, 0) + this->am(joint_index, 0)) * this->tj1(joint_index, 0) + this->vi(joint_index, 0);
        at = -this->am(joint_index, 0);
    }
    else if (t <= this->tj1(joint_index, 0) + this->ta(joint_index, 0) + this->tj1_(joint_index, 0))
    { // 2
        xt = 1.0 / 6 * this->jm(joint_index, 0) * pow(t, 3) - 1.0 / 2 * this->jm(joint_index, 0) * pow(t, 2) * this->ta(joint_index, 0) + 1.0 / 2 * this->jm(joint_index, 0) * t * pow(this->ta(joint_index, 0), 2) - 1.0 / 6 * this->jm(joint_index, 0) * pow(this->ta(joint_index, 0), 3) + 1.0 / 6 * this->jm(joint_index, 0) * pow(this->tj1(joint_index, 0), 3) - 1.0 / 2 * this->am(joint_index, 0) * pow(t, 2) - 1.0 / 2 * (this->jm(joint_index, 0) * this->ta(joint_index, 0) + this->ai(joint_index, 0) + this->am(joint_index, 0)) * pow(this->tj1(joint_index, 0), 2) - 1.0 / 2 * (this->jm(joint_index, 0) * pow(t, 2) - 2 * this->jm(joint_index, 0) * t * this->ta(joint_index, 0) + this->jm(joint_index, 0) * pow(this->ta(joint_index, 0), 2) - 2 * (this->ai(joint_index, 0) + this->am(joint_index, 0)) * t) * this->tj1(joint_index, 0) + t * this->vi(joint_index, 0) + this->xi(joint_index, 0);
        vt = 1.0 / 2 * this->jm(joint_index, 0) * pow(t, 2) - this->jm(joint_index, 0) * t * this->ta(joint_index, 0) + 1.0 / 2 * this->jm(joint_index, 0) * pow(this->ta(joint_index, 0), 2) - this->am(joint_index, 0) * t - (this->jm(joint_index, 0) * t - this->jm(joint_index, 0) * this->ta(joint_index, 0) - this->ai(joint_index, 0) - this->am(joint_index, 0)) * this->tj1(joint_index, 0) + this->vi(joint_index, 0);
        at = -this->am(joint_index, 0) + (this->jm(joint_index, 0) * (t - this->tj1(joint_index, 0) - this->ta(joint_index, 0)));
        if (at > this->am(joint_index, 0))
            at = this->am(joint_index, 0);
        else if (at < -this->am(joint_index, 0))
            at = -this->am(joint_index, 0);
    }
    else if (t <= this->tj1(joint_index, 0) + this->ta(joint_index, 0) + this->tj1_(joint_index, 0) + this->tc(joint_index, 0))
    { // 3
        xt = 1.0 / 3 * this->jm(joint_index, 0) * pow(this->tj1(joint_index, 0), 3) - 1.0 / 3 * this->jm(joint_index, 0) * pow(this->tj1_(joint_index, 0), 3) - this->am(joint_index, 0) * t * this->ta(joint_index, 0) + 1.0 / 2 * this->am(joint_index, 0) * pow(this->ta(joint_index, 0), 2) - 1.0 / 2 * (this->jm(joint_index, 0) * t + this->ai(joint_index, 0)) * pow(this->tj1(joint_index, 0), 2) + 1.0 / 2 * (this->jm(joint_index, 0) * t - this->jm(joint_index, 0) * this->ta(joint_index, 0) - this->jm(joint_index, 0) * this->tj1(joint_index, 0) + this->am(joint_index, 0)) * pow(this->tj1_(joint_index, 0), 2) + (this->ai(joint_index, 0) * t + this->am(joint_index, 0) * this->ta(joint_index, 0)) * this->tj1(joint_index, 0) - (this->am(joint_index, 0) * t - this->am(joint_index, 0) * this->ta(joint_index, 0) - this->am(joint_index, 0) * this->tj1(joint_index, 0)) * this->tj1_(joint_index, 0) + t * this->vi(joint_index, 0) + this->xi(joint_index, 0);
        vt = -1.0 / 2 * this->jm(joint_index, 0) * pow(this->tj1(joint_index, 0), 2) + 1.0 / 2 * this->jm(joint_index, 0) * pow(this->tj1_(joint_index, 0), 2) - this->am(joint_index, 0) * this->ta(joint_index, 0) + this->ai(joint_index, 0) * this->tj1(joint_index, 0) - this->am(joint_index, 0) * this->tj1_(joint_index, 0) + this->vi(joint_index, 0);
        at = 0.0;
    }
    else if (t <= this->tj1(joint_index, 0) + this->ta(joint_index, 0) + this->tj1_(joint_index, 0) + this->tc(joint_index, 0) + this->tj2(joint_index, 0))
    { // 4
        xt = 1.0 / 6 * this->jm(joint_index, 0) * pow(t, 3) - 1.0 / 6 * this->jm(joint_index, 0) * pow(this->ta(joint_index, 0), 3) - 1.0 / 6 * this->jm(joint_index, 0) * pow(this->tc(joint_index, 0), 3) + 1.0 / 6 * this->jm(joint_index, 0) * pow(this->tj1(joint_index, 0), 3) - 1.0 / 2 * this->jm(joint_index, 0) * pow(this->tj1_(joint_index, 0), 3) + 1.0 / 2 * (this->jm(joint_index, 0) * t + this->am(joint_index, 0)) * pow(this->ta(joint_index, 0), 2) + 1.0 / 2 * (this->jm(joint_index, 0) * t - this->jm(joint_index, 0) * this->ta(joint_index, 0)) * pow(this->tc(joint_index, 0), 2) - 1.0 / 2 * (this->jm(joint_index, 0) * this->ta(joint_index, 0) + this->jm(joint_index, 0) * this->tc(joint_index, 0) + this->ai(joint_index, 0)) * pow(this->tj1(joint_index, 0), 2) + 1.0 / 2 * (2 * this->jm(joint_index, 0) * t - 2 * this->jm(joint_index, 0) * this->ta(joint_index, 0) - this->jm(joint_index, 0) * this->tc(joint_index, 0) - 2 * this->jm(joint_index, 0) * this->tj1(joint_index, 0) + this->am(joint_index, 0)) * pow(this->tj1_(joint_index, 0), 2) - 1.0 / 2 * (this->jm(joint_index, 0) * pow(t, 2) + 2 * this->am(joint_index, 0) * t) * this->ta(joint_index, 0) - 1.0 / 2 * (this->jm(joint_index, 0) * pow(t, 2) - 2 * this->jm(joint_index, 0) * t * this->ta(joint_index, 0) + this->jm(joint_index, 0) * pow(this->ta(joint_index, 0), 2)) * this->tc(joint_index, 0) - 1.0 / 2 * (this->jm(joint_index, 0) * pow(t, 2) + this->jm(joint_index, 0) * pow(this->ta(joint_index, 0), 2) + this->jm(joint_index, 0) * pow(this->tc(joint_index, 0), 2) - 2 * this->ai(joint_index, 0) * t - 2 * (this->jm(joint_index, 0) * t + this->am(joint_index, 0)) * this->ta(joint_index, 0) - 2 * (this->jm(joint_index, 0) * t - this->jm(joint_index, 0) * this->ta(joint_index, 0)) * this->tc(joint_index, 0)) * this->tj1(joint_index, 0) - 1.0 / 2 * (this->jm(joint_index, 0) * pow(t, 2) + this->jm(joint_index, 0) * pow(this->ta(joint_index, 0), 2) + this->jm(joint_index, 0) * pow(this->tc(joint_index, 0), 2) + this->jm(joint_index, 0) * pow(this->tj1(joint_index, 0), 2) + 2 * this->am(joint_index, 0) * t - 2 * (this->jm(joint_index, 0) * t + this->am(joint_index, 0)) * this->ta(joint_index, 0) - 2 * (this->jm(joint_index, 0) * t - this->jm(joint_index, 0) * this->ta(joint_index, 0)) * this->tc(joint_index, 0) - 2 * (this->jm(joint_index, 0) * t - this->jm(joint_index, 0) * this->ta(joint_index, 0) - this->jm(joint_index, 0) * this->tc(joint_index, 0) + this->am(joint_index, 0)) * this->tj1(joint_index, 0)) * this->tj1_(joint_index, 0) + t * this->vi(joint_index, 0) + this->xi(joint_index, 0);
        vt = 1.0 / 2 * this->jm(joint_index, 0) * pow(t, 2) + 1.0 / 2 * this->jm(joint_index, 0) * pow(this->ta(joint_index, 0), 2) + 1.0 / 2 * this->jm(joint_index, 0) * pow(this->tc(joint_index, 0), 2) + this->jm(joint_index, 0) * pow(this->tj1_(joint_index, 0), 2) - (this->jm(joint_index, 0) * t + this->am(joint_index, 0)) * this->ta(joint_index, 0) - (this->jm(joint_index, 0) * t - this->jm(joint_index, 0) * this->ta(joint_index, 0)) * this->tc(joint_index, 0) - (this->jm(joint_index, 0) * t - this->jm(joint_index, 0) * this->ta(joint_index, 0) - this->jm(joint_index, 0) * this->tc(joint_index, 0) - this->ai(joint_index, 0)) * this->tj1(joint_index, 0) - (this->jm(joint_index, 0) * t - this->jm(joint_index, 0) * this->ta(joint_index, 0) - this->jm(joint_index, 0) * this->tc(joint_index, 0) - this->jm(joint_index, 0) * this->tj1(joint_index, 0) + this->am(joint_index, 0)) * this->tj1_(joint_index, 0) + this->vi(joint_index, 0);
        at = this->jm(joint_index, 0) * (t - this->tj1(joint_index, 0) - this->ta(joint_index, 0) - this->tj1_(joint_index, 0) - this->tc(joint_index, 0));
        if (at > this->am(joint_index, 0))
            at = this->am(joint_index, 0);
        else if (at < -this->am(joint_index, 0))
            at = -this->am(joint_index, 0);
    }
    else if (t <= this->T(joint_index, 0))
    { // 5
        xt = -1.0 / 6 * (pow(this->jm(joint_index, 0), 3) * pow(t, 3) - pow(this->jm(joint_index, 0), 3) * pow(this->ta(joint_index, 0), 3) - pow(this->jm(joint_index, 0), 3) * pow(this->tc(joint_index, 0), 3) - 3 * pow(this->jm(joint_index, 0), 3) * pow(this->tj1(joint_index, 0), 3) + pow(this->jm(joint_index, 0), 3) * pow(this->tj1_(joint_index, 0), 3) - 6 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2) * pow(t, 2) + 6 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0) * t - 6 * pow(this->jm(joint_index, 0), 2) * t * this->vi(joint_index, 0) - 2 * pow(this->ap2(joint_index, 0), 3) + 3 * (pow(this->jm(joint_index, 0), 3) * t - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * pow(this->ta(joint_index, 0), 2) + 3 * (pow(this->jm(joint_index, 0), 3) * t - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - 2 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) * pow(this->tc(joint_index, 0), 2) + 3 * (2 * pow(this->jm(joint_index, 0), 3) * t - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->tc(joint_index, 0) + (this->ai(joint_index, 0) - 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * pow(this->tj1(joint_index, 0), 2) - 3 * (pow(this->jm(joint_index, 0), 3) * this->tc(joint_index, 0) + (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * pow(this->tj1_(joint_index, 0), 2) - 6 * pow(this->jm(joint_index, 0), 2) * this->xi(joint_index, 0) - 3 * (pow(this->jm(joint_index, 0), 3) * pow(t, 2) - 2 * (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2) * t + 2 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0)) * this->ta(joint_index, 0) - 3 * (pow(this->jm(joint_index, 0), 3) * pow(t, 2) + pow(this->jm(joint_index, 0), 3) * pow(this->ta(joint_index, 0), 2) - 4 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2) * t + 2 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * t - 2 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) * this->ta(joint_index, 0)) * this->tc(joint_index, 0) - 3 * (pow(this->jm(joint_index, 0), 3) * pow(t, 2) + pow(this->jm(joint_index, 0), 3) * pow(this->ta(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->tc(joint_index, 0), 2) + 2 * (this->ai(joint_index, 0) - 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2) * t + 2 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * t - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * this->ta(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * t - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - 2 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) * this->tc(joint_index, 0)) * this->tj1(joint_index, 0) - 3 * (pow(this->jm(joint_index, 0), 3) * pow(t, 2) + pow(this->jm(joint_index, 0), 3) * pow(this->ta(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->tc(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->tj1(joint_index, 0), 2) - 2 * (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2) * t + 2 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * t - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * this->ta(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * t - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - 2 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) * this->tc(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * t - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->tc(joint_index, 0) - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * this->tj1(joint_index, 0)) * this->tj1_(joint_index, 0)) / pow(this->jm(joint_index, 0), 2);
        vt = -1.0 / 2 * (pow(this->jm(joint_index, 0), 2) * pow(t, 2) + pow(this->jm(joint_index, 0), 2) * pow(this->ta(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 2) * pow(this->tc(joint_index, 0), 2) + 2 * pow(this->jm(joint_index, 0), 2) * pow(this->tj1(joint_index, 0), 2) - 4 * this->ap2(joint_index, 0) * this->jm(joint_index, 0) * t + 2 * pow(this->ap2(joint_index, 0), 2) - 2 * (pow(this->jm(joint_index, 0), 2) * t - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * this->jm(joint_index, 0)) * this->ta(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 2) * t - pow(this->jm(joint_index, 0), 2) * this->ta(joint_index, 0) - 2 * this->ap2(joint_index, 0) * this->jm(joint_index, 0)) * this->tc(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 2) * t - pow(this->jm(joint_index, 0), 2) * this->ta(joint_index, 0) - pow(this->jm(joint_index, 0), 2) * this->tc(joint_index, 0) + (this->ai(joint_index, 0) - 2 * this->ap2(joint_index, 0)) * this->jm(joint_index, 0)) * this->tj1(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 2) * t - pow(this->jm(joint_index, 0), 2) * this->ta(joint_index, 0) - pow(this->jm(joint_index, 0), 2) * this->tc(joint_index, 0) - pow(this->jm(joint_index, 0), 2) * this->tj1(joint_index, 0) - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * this->jm(joint_index, 0)) * this->tj1_(joint_index, 0) - 2 * this->jm(joint_index, 0) * this->vi(joint_index, 0)) / this->jm(joint_index, 0);
        at = this->jm(joint_index, 0) * (this->tj1(joint_index, 0) + this->ta(joint_index, 0) + this->tj1_(joint_index, 0) + this->tc(joint_index, 0) + (this->ap2(joint_index, 0) / this->jm(joint_index, 0)) + (this->ap2(joint_index, 0) / this->jm(joint_index, 0)) - t);
        if (at > this->am(joint_index, 0))
            at = this->am(joint_index, 0);
        else if (at < -this->am(joint_index, 0))
            at = -this->am(joint_index, 0);
    }
}

template <int DOF>
double Profile14<DOF>::CalculateTime(int joint_index, double dist, double &t_prev)
{
    for (double t = t_prev; t <= this->T(joint_index, 0); t += 0.0005)
    {
        if (t <= this->tj1(joint_index, 0))
            xt = -1.0 / 6 * this->jm(joint_index, 0) * pow(t, 3) + 1.0 / 2 * this->ai(joint_index, 0) * pow(t, 2) + t * this->vi(joint_index, 0) + this->xi(joint_index, 0);
        else if (t <= this->tj1(joint_index, 0) + this->ta(joint_index, 0))
            xt = 1.0 / 3 * this->jm(joint_index, 0) * pow(this->tj1(joint_index, 0), 3) - 1.0 / 2 * this->am(joint_index, 0) * pow(t, 2) + (this->ai(joint_index, 0) + this->am(joint_index, 0)) * t * this->tj1(joint_index, 0) - 1.0 / 2 * (this->jm(joint_index, 0) * t + this->ai(joint_index, 0) + this->am(joint_index, 0)) * pow(this->tj1(joint_index, 0), 2) + t * this->vi(joint_index, 0) + this->xi(joint_index, 0);
        else if (t <= this->tj1(joint_index, 0) + this->ta(joint_index, 0) + this->tj1_(joint_index, 0))
            xt = 1.0 / 6 * this->jm(joint_index, 0) * pow(t, 3) - 1.0 / 2 * this->jm(joint_index, 0) * pow(t, 2) * this->ta(joint_index, 0) + 1.0 / 2 * this->jm(joint_index, 0) * t * pow(this->ta(joint_index, 0), 2) - 1.0 / 6 * this->jm(joint_index, 0) * pow(this->ta(joint_index, 0), 3) + 1.0 / 6 * this->jm(joint_index, 0) * pow(this->tj1(joint_index, 0), 3) - 1.0 / 2 * this->am(joint_index, 0) * pow(t, 2) - 1.0 / 2 * (this->jm(joint_index, 0) * this->ta(joint_index, 0) + this->ai(joint_index, 0) + this->am(joint_index, 0)) * pow(this->tj1(joint_index, 0), 2) - 1.0 / 2 * (this->jm(joint_index, 0) * pow(t, 2) - 2 * this->jm(joint_index, 0) * t * this->ta(joint_index, 0) + this->jm(joint_index, 0) * pow(this->ta(joint_index, 0), 2) - 2 * (this->ai(joint_index, 0) + this->am(joint_index, 0)) * t) * this->tj1(joint_index, 0) + t * this->vi(joint_index, 0) + this->xi(joint_index, 0);
        else if (t <= this->tj1(joint_index, 0) + this->ta(joint_index, 0) + this->tj1_(joint_index, 0) + this->tc(joint_index, 0))
            xt = 1.0 / 3 * this->jm(joint_index, 0) * pow(this->tj1(joint_index, 0), 3) - 1.0 / 3 * this->jm(joint_index, 0) * pow(this->tj1_(joint_index, 0), 3) - this->am(joint_index, 0) * t * this->ta(joint_index, 0) + 1.0 / 2 * this->am(joint_index, 0) * pow(this->ta(joint_index, 0), 2) - 1.0 / 2 * (this->jm(joint_index, 0) * t + this->ai(joint_index, 0)) * pow(this->tj1(joint_index, 0), 2) + 1.0 / 2 * (this->jm(joint_index, 0) * t - this->jm(joint_index, 0) * this->ta(joint_index, 0) - this->jm(joint_index, 0) * this->tj1(joint_index, 0) + this->am(joint_index, 0)) * pow(this->tj1_(joint_index, 0), 2) + (this->ai(joint_index, 0) * t + this->am(joint_index, 0) * this->ta(joint_index, 0)) * this->tj1(joint_index, 0) - (this->am(joint_index, 0) * t - this->am(joint_index, 0) * this->ta(joint_index, 0) - this->am(joint_index, 0) * this->tj1(joint_index, 0)) * this->tj1_(joint_index, 0) + t * this->vi(joint_index, 0) + this->xi(joint_index, 0);
        else if (t <= this->tj1(joint_index, 0) + this->ta(joint_index, 0) + this->tj1_(joint_index, 0) + this->tc(joint_index, 0) + this->tj2(joint_index, 0))
            xt = 1.0 / 6 * this->jm(joint_index, 0) * pow(t, 3) - 1.0 / 6 * this->jm(joint_index, 0) * pow(this->ta(joint_index, 0), 3) - 1.0 / 6 * this->jm(joint_index, 0) * pow(this->tc(joint_index, 0), 3) + 1.0 / 6 * this->jm(joint_index, 0) * pow(this->tj1(joint_index, 0), 3) - 1.0 / 2 * this->jm(joint_index, 0) * pow(this->tj1_(joint_index, 0), 3) + 1.0 / 2 * (this->jm(joint_index, 0) * t + this->am(joint_index, 0)) * pow(this->ta(joint_index, 0), 2) + 1.0 / 2 * (this->jm(joint_index, 0) * t - this->jm(joint_index, 0) * this->ta(joint_index, 0)) * pow(this->tc(joint_index, 0), 2) - 1.0 / 2 * (this->jm(joint_index, 0) * this->ta(joint_index, 0) + this->jm(joint_index, 0) * this->tc(joint_index, 0) + this->ai(joint_index, 0)) * pow(this->tj1(joint_index, 0), 2) + 1.0 / 2 * (2 * this->jm(joint_index, 0) * t - 2 * this->jm(joint_index, 0) * this->ta(joint_index, 0) - this->jm(joint_index, 0) * this->tc(joint_index, 0) - 2 * this->jm(joint_index, 0) * this->tj1(joint_index, 0) + this->am(joint_index, 0)) * pow(this->tj1_(joint_index, 0), 2) - 1.0 / 2 * (this->jm(joint_index, 0) * pow(t, 2) + 2 * this->am(joint_index, 0) * t) * this->ta(joint_index, 0) - 1.0 / 2 * (this->jm(joint_index, 0) * pow(t, 2) - 2 * this->jm(joint_index, 0) * t * this->ta(joint_index, 0) + this->jm(joint_index, 0) * pow(this->ta(joint_index, 0), 2)) * this->tc(joint_index, 0) - 1.0 / 2 * (this->jm(joint_index, 0) * pow(t, 2) + this->jm(joint_index, 0) * pow(this->ta(joint_index, 0), 2) + this->jm(joint_index, 0) * pow(this->tc(joint_index, 0), 2) - 2 * this->ai(joint_index, 0) * t - 2 * (this->jm(joint_index, 0) * t + this->am(joint_index, 0)) * this->ta(joint_index, 0) - 2 * (this->jm(joint_index, 0) * t - this->jm(joint_index, 0) * this->ta(joint_index, 0)) * this->tc(joint_index, 0)) * this->tj1(joint_index, 0) - 1.0 / 2 * (this->jm(joint_index, 0) * pow(t, 2) + this->jm(joint_index, 0) * pow(this->ta(joint_index, 0), 2) + this->jm(joint_index, 0) * pow(this->tc(joint_index, 0), 2) + this->jm(joint_index, 0) * pow(this->tj1(joint_index, 0), 2) + 2 * this->am(joint_index, 0) * t - 2 * (this->jm(joint_index, 0) * t + this->am(joint_index, 0)) * this->ta(joint_index, 0) - 2 * (this->jm(joint_index, 0) * t - this->jm(joint_index, 0) * this->ta(joint_index, 0)) * this->tc(joint_index, 0) - 2 * (this->jm(joint_index, 0) * t - this->jm(joint_index, 0) * this->ta(joint_index, 0) - this->jm(joint_index, 0) * this->tc(joint_index, 0) + this->am(joint_index, 0)) * this->tj1(joint_index, 0)) * this->tj1_(joint_index, 0) + t * this->vi(joint_index, 0) + this->xi(joint_index, 0);
        else if (t <= this->T(joint_index, 0))
            xt = -1.0 / 6 * (pow(this->jm(joint_index, 0), 3) * pow(t, 3) - pow(this->jm(joint_index, 0), 3) * pow(this->ta(joint_index, 0), 3) - pow(this->jm(joint_index, 0), 3) * pow(this->tc(joint_index, 0), 3) - 3 * pow(this->jm(joint_index, 0), 3) * pow(this->tj1(joint_index, 0), 3) + pow(this->jm(joint_index, 0), 3) * pow(this->tj1_(joint_index, 0), 3) - 6 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2) * pow(t, 2) + 6 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0) * t - 6 * pow(this->jm(joint_index, 0), 2) * t * this->vi(joint_index, 0) - 2 * pow(this->ap2(joint_index, 0), 3) + 3 * (pow(this->jm(joint_index, 0), 3) * t - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * pow(this->ta(joint_index, 0), 2) + 3 * (pow(this->jm(joint_index, 0), 3) * t - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - 2 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) * pow(this->tc(joint_index, 0), 2) + 3 * (2 * pow(this->jm(joint_index, 0), 3) * t - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->tc(joint_index, 0) + (this->ai(joint_index, 0) - 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * pow(this->tj1(joint_index, 0), 2) - 3 * (pow(this->jm(joint_index, 0), 3) * this->tc(joint_index, 0) + (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * pow(this->tj1_(joint_index, 0), 2) - 6 * pow(this->jm(joint_index, 0), 2) * this->xi(joint_index, 0) - 3 * (pow(this->jm(joint_index, 0), 3) * pow(t, 2) - 2 * (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2) * t + 2 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0)) * this->ta(joint_index, 0) - 3 * (pow(this->jm(joint_index, 0), 3) * pow(t, 2) + pow(this->jm(joint_index, 0), 3) * pow(this->ta(joint_index, 0), 2) - 4 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2) * t + 2 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * t - 2 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) * this->ta(joint_index, 0)) * this->tc(joint_index, 0) - 3 * (pow(this->jm(joint_index, 0), 3) * pow(t, 2) + pow(this->jm(joint_index, 0), 3) * pow(this->ta(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->tc(joint_index, 0), 2) + 2 * (this->ai(joint_index, 0) - 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2) * t + 2 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * t - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * this->ta(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * t - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - 2 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) * this->tc(joint_index, 0)) * this->tj1(joint_index, 0) - 3 * (pow(this->jm(joint_index, 0), 3) * pow(t, 2) + pow(this->jm(joint_index, 0), 3) * pow(this->ta(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->tc(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->tj1(joint_index, 0), 2) - 2 * (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2) * t + 2 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * t - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * this->ta(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * t - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - 2 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) * this->tc(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * t - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->tc(joint_index, 0) - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * this->tj1(joint_index, 0)) * this->tj1_(joint_index, 0)) / pow(this->jm(joint_index, 0), 2);
        if (dist - xt <= 0.0)
        {
            t_prev = t;
            return t;
        }
    }
}

template <int DOF>
void Profile14<DOF>::ComputeProfile(int joint_index)
{
    std::ofstream log_file("/home/akarshan/OTG_2/owl_otg/one_dof_otg/text_files/plot_data.txt",
                           std::ios::out | std::ios::app);
    double xt, vt, at;
    Eigen::Vector4d single_point;
    for (double t = 0.0; t <= this->T(joint_index, 0); t += 0.002)
    {
        HelpingFun2Gen_State(xt, vt, at, t, joint_index);
        single_point << xt, vt, at, t + t0[joint_index];
        single_joint_profile.push_back(single_point);
        if (plot_data[joint_index])
            log_file << xt << " " << vt << " " << at << " " << t + t0[joint_index] << endl;
    }
    xt = -1.0 / 6 * (pow(this->jm(joint_index, 0), 3) * pow(this->T(joint_index, 0), 3) - pow(this->jm(joint_index, 0), 3) * pow(this->ta(joint_index, 0), 3) - pow(this->jm(joint_index, 0), 3) * pow(this->tc(joint_index, 0), 3) - 3 * pow(this->jm(joint_index, 0), 3) * pow(this->tj1(joint_index, 0), 3) + pow(this->jm(joint_index, 0), 3) * pow(this->tj1_(joint_index, 0), 3) - 6 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2) * pow(this->T(joint_index, 0), 2) + 6 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0) * this->T(joint_index, 0) - 6 * pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) * this->vi(joint_index, 0) - 2 * pow(this->ap2(joint_index, 0), 3) + 3 * (pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * pow(this->ta(joint_index, 0), 2) + 3 * (pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - 2 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) * pow(this->tc(joint_index, 0), 2) + 3 * (2 * pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->tc(joint_index, 0) + (this->ai(joint_index, 0) - 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * pow(this->tj1(joint_index, 0), 2) - 3 * (pow(this->jm(joint_index, 0), 3) * this->tc(joint_index, 0) + (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * pow(this->tj1_(joint_index, 0), 2) - 6 * pow(this->jm(joint_index, 0), 2) * this->xi(joint_index, 0) - 3 * (pow(this->jm(joint_index, 0), 3) * pow(this->T(joint_index, 0), 2) - 2 * (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) + 2 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0)) * this->ta(joint_index, 0) - 3 * (pow(this->jm(joint_index, 0), 3) * pow(this->T(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->ta(joint_index, 0), 2) - 4 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) + 2 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - 2 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) * this->ta(joint_index, 0)) * this->tc(joint_index, 0) - 3 * (pow(this->jm(joint_index, 0), 3) * pow(this->T(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->ta(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->tc(joint_index, 0), 2) + 2 * (this->ai(joint_index, 0) - 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) + 2 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * this->ta(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - 2 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) * this->tc(joint_index, 0)) * this->tj1(joint_index, 0) - 3 * (pow(this->jm(joint_index, 0), 3) * pow(this->T(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->ta(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->tc(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 3) * pow(this->tj1(joint_index, 0), 2) - 2 * (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) + 2 * pow(this->ap2(joint_index, 0), 2) * this->jm(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * this->ta(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - 2 * this->ap2(joint_index, 0) * pow(this->jm(joint_index, 0), 2)) * this->tc(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 3) * this->T(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->ta(joint_index, 0) - pow(this->jm(joint_index, 0), 3) * this->tc(joint_index, 0) - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * pow(this->jm(joint_index, 0), 2)) * this->tj1(joint_index, 0)) * this->tj1_(joint_index, 0)) / pow(this->jm(joint_index, 0), 2);
    vt = -1.0 / 2 * (pow(this->jm(joint_index, 0), 2) * pow(this->T(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 2) * pow(this->ta(joint_index, 0), 2) + pow(this->jm(joint_index, 0), 2) * pow(this->tc(joint_index, 0), 2) + 2 * pow(this->jm(joint_index, 0), 2) * pow(this->tj1(joint_index, 0), 2) - 4 * this->ap2(joint_index, 0) * this->jm(joint_index, 0) * this->T(joint_index, 0) + 2 * pow(this->ap2(joint_index, 0), 2) - 2 * (pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * this->jm(joint_index, 0)) * this->ta(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) - pow(this->jm(joint_index, 0), 2) * this->ta(joint_index, 0) - 2 * this->ap2(joint_index, 0) * this->jm(joint_index, 0)) * this->tc(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) - pow(this->jm(joint_index, 0), 2) * this->ta(joint_index, 0) - pow(this->jm(joint_index, 0), 2) * this->tc(joint_index, 0) + (this->ai(joint_index, 0) - 2 * this->ap2(joint_index, 0)) * this->jm(joint_index, 0)) * this->tj1(joint_index, 0) - 2 * (pow(this->jm(joint_index, 0), 2) * this->T(joint_index, 0) - pow(this->jm(joint_index, 0), 2) * this->ta(joint_index, 0) - pow(this->jm(joint_index, 0), 2) * this->tc(joint_index, 0) - pow(this->jm(joint_index, 0), 2) * this->tj1(joint_index, 0) - (this->am(joint_index, 0) + 2 * this->ap2(joint_index, 0)) * this->jm(joint_index, 0)) * this->tj1_(joint_index, 0) - 2 * this->jm(joint_index, 0) * this->vi(joint_index, 0)) / this->jm(joint_index, 0);
    at = this->jm(joint_index, 0) * (this->tj1(joint_index, 0) + this->ta(joint_index, 0) + this->tj1_(joint_index, 0) + this->tc(joint_index, 0) + (this->ap2(joint_index, 0) / this->jm(joint_index, 0)) + (this->ap2(joint_index, 0) / this->jm(joint_index, 0)) - this->T(joint_index, 0));

    single_point << xt, vt, at, this->T(joint_index, 0) + t0[joint_index];
    single_joint_profile.push_back(single_point);
    n_profiles[joint_index] = (single_joint_profile);
    if (plot_data[joint_index])
        log_file << xt << " " << vt << " " << at << " " << this->T(joint_index, 0) + t0[joint_index] << endl;

    t0[joint_index] += this->T(joint_index, 0);
}
